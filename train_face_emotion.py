# -*- coding: utf-8 -*-
"""train_face_emotion

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gbYsX7hcOCZcgpzpFeCw7xoyJ519CmKj
"""

# FILE: models/generate_feedback.py

from transformers import pipeline, AutoTokenizer, AutoModelForCausalLM
import pandas as pd
import numpy as np
from pathlib import Path

EXPORT_DIR = Path("exports")
MODEL_NAME = "mistralai/Mistral-7B-Instruct-v0.1"  # Example placeholder

print("⏳ Loading LLM model...")
tokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)
model = AutoModelForCausalLM.from_pretrained(MODEL_NAME)
gen = pipeline("text-generation", model=model, tokenizer=tokenizer)
print("✅ Model loaded.")

def score_to_feedback(score):
    if score > 0.5:
        level = "high"
    elif score > 0:
        level = "moderate"
    else:
        level = "low"

    prompt = (
        f"You are a mental wellness assistant. A user has a stress score of {score:.2f}, indicating {level} stress."
        f" Please provide a friendly, empathetic 2-line feedback with 1 emoji and 1 actionable suggestion."
    )
    result = gen(prompt, max_new_tokens=60, do_sample=True, temperature=0.7)[0]["generated_text"]
    return result.split("\n")[-1]  # Last response line

def main():
    df = pd.read_excel(EXPORT_DIR / "fused_stress_scores.xlsx")
    df["feedback"] = df["avg_score"].apply(score_to_feedback)
    df.to_excel(EXPORT_DIR / "fused_scores_with_feedback.xlsx", index=False)
    print("✅ Feedback saved to exports/fused_scores_with_feedback.xlsx")

if __name__ == "__main__":
    main()